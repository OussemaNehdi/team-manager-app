name: CI Pipeline

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push React image
        run: |
          docker build -t sanfara/nginx-reverse-proxy:${{ github.ref_name }} ./nginx
          docker push sanfara/nginx-reverse-proxy:${{ github.ref_name }}

      - name: Build and push Express image
        run: |
          docker build -t sanfara/express-backend:${{ github.ref_name }} ./backend
          docker push sanfara/express-backend:${{ github.ref_name }}

      - name: Replace tag in deployment files
        env:
          TAG_NAME: ${{ github.ref_name }}
        run: |
          # Replace tag in express backend template
          envsubst < KubernetesClusterYamlConfig/express-backenddeployment-t.yaml > KubernetesClusterYamlConfig/express-backenddeployment.yaml
          
          # Replace tag in Nginx template
          envsubst < KubernetesClusterYamlConfig/nginx-deployment-t.yaml > KubernetesClusterYamlConfig/nginx-deployment.yaml

      - name: Commit updated YAML files
        env:
          TAG_NAME: ${{ github.ref_name }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/${{ github.repository }}
          git add KubernetesClusterYamlConfig/express-backenddeployment.yaml
          git add KubernetesClusterYamlConfig/nginx-deployment.yaml
          git commit -m "Update deployments for tag $TAG_NAME"
          git push origin HEAD:master

      - name: Run Tests
        run: |
          # Run your tests here, e.g., using Jest or Mocha for Node.js
          # npm install
          # npm test
